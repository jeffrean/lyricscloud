<?php

use Behat\Behat\Context\BehatContext,
	Behat\Behat\Exception\PendingException;
use Behat\Gherkin\Node\PyStringNode,
	Behat\Gherkin\Node\TableNode;

use Facebook\WebDriver\Remote\DesiredCapabilities;
use Facebook\WebDriver\Remote\RemoteWebDriver;
use Facebook\WebDriver\WebDriverBy;

class FeatureContext extends BehatContext
{
	private $driver;
	private $session;
	private $host = 'http://localhost:4444/wd/hub';

	private function name_translation($name)
	{
		if(strcmp($name, "search_bar") == 0)
		{
			return "project-search";
		}
		if(strcmp($name, "search_button") == 0)
		{
			return "project-button"
		}
	}

	/*public function __construct()
	{
		// start Firefox with 5 second timeout
		$capabilities = DesiredCapabilities::firefox();
		$this->driver = RemoteWebDriver::create($this->host, $capabilities, 5000);
	}*/

	/**
	 * @Given /^I am on "([^"]*)"$/
	 */
	/*public function iAmOn($arg1)
	{
		// navigate to 'http://docs.seleniumhq.org/'
		$this->driver->get($arg1);
		if($this->driver->getTitle() != "Word Cloud")
			throw new PendingException();
	}*/

	/**
	 * @Then /^"([^"]*)" should be empty$/
	 */
	/*public function shouldBeEmpty($arg1)
	{
		$input = $this->driver->findElement(
			WebDriverBy::id('project-search')
		);
		if(is_null($input))
			throw new PendingException();
		if($input->getText() != '')
			throw new PendingException();
	}*/
		/**
	 * @Given /^I am on "([^"]*)"$/
	 */
	public function iAmOn($arg1)
	{
		$this->driver->get($arg1);
		if($this->driver->getTitle() == "Problem loading page")
			throw new PendingException();
	}

	/**
	 * @Then /^"([^"]*)" should be empty$/
	 */
	public function shouldBeEmpty($arg1)
	{
		$id_name = name_translation($arg1);
		$input = $this->driver->findElement(
			WebDriverBy::id($id_name)
		);
		if(is_null($input))
			throw new PendingException();
		if($input->getText() != '')
			throw new PendingException();
	}

	/**
	 * @Then /^there should be a "([^"]*)"$/
	 */
	public function thereShouldBeA($arg1)
	{
		$id_name = name_translation($arg1);
		$web_elem = $this->driver->findElement(
			WebDriverBy::id($id_name)
		);
		if(is_null($web_elem))
		{
			throw new PendingException();
		}
	}

	/**
	 * @Given /^the "([^"]*)" should be the same as the "([^"]*)"$/
	 */
	public function theShouldBeTheSameAsThe($arg1, $arg2)
	{
		// On word cloud page
		// $arg2 should be artist name
		if(strcmp($arg1, "word_cloud_title") == 0)
		{
			
		}
		throw new PendingException();
	}
}